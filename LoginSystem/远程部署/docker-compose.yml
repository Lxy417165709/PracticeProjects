networks:
  flea-net:
services:
  nginx:
    image: nginx
    container_name: nginx
    restart: always
    networks:
        - flea-net  # 表示在同一flea-net网络下
    ports:
      - "9899:80"
    volumes:
      - $PWD/nginx/Client:/usr/share/nginx/html # 把我们的前端页面映射到/usr/share/nginx/html,这样nginx就会执行我们的前端页面
      - $PWD/nginx/conf.d:/etc/nginx/conf.d # 把我们要配置的nginx文件映射到/etc/nginx/conf.d,这样nginx就会执行我们的配置
  golang:
    build: go_server
    container_name: golang # 容器名,在nginx反向代理配置中 http://golang:端口/XXXX 就可以访问到服务器了
    restart: always
    networks:
      - flea-net  # 表示在同一flea-net网络下

  postgres:
    image: postgres
    networks:
      - flea-net  # 表示在同一flea-net网络下
    container_name: pg_db # 容器名,然后在go语言的连接数据库时,host写这个,就可以连接到postgres数据库了
    ports:
      - "8989:5432"
    environment:
      POSTGRES_USER: postgres # 默认的操作用户名
      POSTGRES_PASSWORD: 123456 # 操作用户密码
      POSTGRES_DB: flea # 应该是默认的操作数据库
    volumes:
      - $PWD/postgres/init_db:/docker-entrypoint-initdb.d # 把$PWD/postgres/init_db目录映射到/docker-entrypoint-initdb.d,docker会执行这里面的sql文件
